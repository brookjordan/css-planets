$s-p-y: 0.01;
$u-p-km: 0.00008;
$orbit: 90 / 4537580900;

$planets: (
	mer: (
		name: mer,
		orbit: 69816900,
		size: 2439.7,
		speed: 87.97,
		color: rgb(146, 83, 42)
	),
	ven: (
		name: ven,
		orbit: 108939000,
		size: 6051,
		speed: 224.7,
		color: rgb(137, 92, 34)
	),
	ear: (
		name: ear,
		orbit: 151930000,
		size: 6371,
		speed: 365.25,
		color: rgb(56, 87, 153)
	),
	mar: (
		name: mar,
		orbit: 249200000,
		size: 3389,
		speed: 686.65,
		color: rgb(113, 38, 6)
	),
	jup: (
		name: jup,
		orbit: 816520800,
		size: 71492,
		speed: 4333,
		color: rgb(158, 86, 33),
		ring: 20,
		ring-color: radial-gradient( ellipse farthest-side at 50% 50%, rgba(255,255,255,0) 85%, rgba(255,255,255,0.5) 86% )
	),
	sat: (
		name: sat,
		orbit: 1513325783,
		size: 58232,
		speed: 10759,
		color: rgb(219, 201, 113),
		ring: 80,
		ring-color: radial-gradient(
			ellipse farthest-side at 50% 50%,
			rgba(255,255,255,0) 50%,
			white 51%,
			white 59%,
			rgba(255,255,255,0) 60%,
			white 70%,
			white 80%,
			rgba(255,255,255,0) 81%,
			rgba(255,255,255,0) 85%,
			white 51%
		)
	),
	ura: (
		name: ura,
		orbit: 3006224700,
		size: 25362,
		speed: 30680,
		color: rgb(70, 150, 194)
	),
	nep: (
		name: nep,
		orbit: 4537580900,
		size: 24622,
		speed: 60190,
		color: rgb(49, 78, 144),
		ring: 50,
		ring-color: radial-gradient( ellipse farthest-side at 50% 50%, rgba(255,255,255,0) 92%, rgba(255,255,255,0.3) 93% )
	)
);



* {
	box-sizing: border-box;
}

html {
	width: 100%;
	height: 100%;

	background: black;
}

body {
	position: relative;
	padding: 50%;
	width: 0;
	height: 0;
}

.body {
	position: absolute;
	top: 0%;
	left: 0%;
	width: 100%;
	height: 100%;
}

solarsystem, orbit, planet, planet:after {
	display: block;
	border-radius: 50%;
	box-sizing: border-box;

	transform-style: preserve-3d;
	perspective: 2000px;
}



solarsystem {
	position: relative;

	width: 100%;
	height: 100%;

	overflow: hidden;
}



orbit {
	position: absolute;

	border: 1px solid transparentize( white, .9 );

	/**/
	animation-name: orbit;
	animation-timing-function: linear;
	animation-iteration-count: infinite;
	/**/
}

@each $pName, $pData in $planets {
	$pOrbit: map-get( $pData, orbit ) * $orbit;

	orbit[ #{$pName} ] {
		top:  ( 100 - $pOrbit ) / 2 + 0%;
		left: ( 100 - $pOrbit ) / 2 + 0%;

		width:  $pOrbit + 0%;
		height: $pOrbit + 0%;

		animation-duration: $s-p-y * map-get( $pData, speed ) + 0s;
	}
}



planet {
	position: absolute;
	top: 50%;
	right: 0%;

	/**/
	animation-name: planet;
	animation-timing-function: linear;
	animation-iteration-count: infinite;
	/**/
}

@each $pName, $pData in $planets {
	$pOrbit: map-get( $pData, orbit ) * $orbit;

	$pSizeRaw: map-get( $pData, size ) * $u-p-km;
	$pSize: $pSizeRaw / ( $pOrbit / 100 );

	orbit[ #{$pName} ] planet {
		width: $pSize + 0%;
		height: $pSize + 0%;

		margin-top: -1 * $pSize / 2 + 0%;
		margin-right: -1 * $pSize / 2 + 0%;

		background: map-get( $pData, color );

		animation-duration: $s-p-y * map-get( $pData, speed ) + 0s;
	}
}



planet:after {
	display: block;

	position: absolute;
	top: 0%;
	left: 0%;

	transform: rotateX( 90deg ) rotateZ( 0deg ) rotateY( 20deg );
}

@each $pName, $pData in $planets {
	@if map-get( $pData, ring ) {
		$pOrbit: map-get( $pData, orbit ) * $orbit;

		$pSizeRaw: map-get( $pData, size ) * $u-p-km;
		$pSize: $pSizeRaw / ( $pOrbit / 100 );

		orbit[ #{$pName} ] planet:after {
			content: '';

			width:  100 + ( map-get( $pData, ring ) * 2 ) + 0%;
			height: 100 + ( map-get( $pData, ring ) * 2 ) + 0%;

			margin-top:  -1 * map-get( $pData, ring ) + 0%;
			margin-left: -1 * map-get( $pData, ring ) + 0%;

			background: map-get( $pData, ring-color );
		}
	}
}





@keyframes orbit {
	0%   {transform: rotate( 0deg );}
	100% {transform: rotate( 360deg );}
}

@keyframes planet {
	0%   {transform: rotate( 0deg );}
	100% {transform: rotate( -360deg );}
}